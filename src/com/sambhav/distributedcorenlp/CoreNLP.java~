package com.sambhav.distributedcorenlp;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Map;
import java.util.Properties;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;

import com.hazelcast.config.Config;
import com.hazelcast.config.FileSystemXmlConfig;
import com.hazelcast.core.Hazelcast;
import com.hazelcast.core.HazelcastInstance;
import com.sambhav.util.PropertyFileReader;

import edu.stanford.nlp.pipeline.Annotation;
import edu.stanford.nlp.pipeline.StanfordCoreNLP;

public class CoreNLP {

	private static FileInputStream fileInputStreamForReadingConfigFile = null;
	private final static  String hazelCastConfigFilePath = PropertyFileReader.GetPropertyFromConfigFile(fileInputStreamForReadingConfigFile)
			.getProperty("HazelCastConfigFilePath");;
	
	
	public static void main(String[] args) throws Exception{
		
		try {
			Config config = new FileSystemXmlConfig(hazelCastConfigFilePath);
			
			final HazelcastInstance hazelCastInstance = Hazelcast.newHazelcastInstance(config);
			 
			ExecutorService articleLoaderExecutor = null;
			if(!hazelCastInstance.getLock("articleLoader").isLocked())
			{
				hazelCastInstance.getLock("articleLoader").lock();
				articleLoaderExecutor = Executors.newSingleThreadExecutor();
				articleLoaderExecutor.submit(new LoadArticles(hazelCastInstance));
			}		
		
			FileInputStream fileInputStreamForReadingConfigFile = null;
			
			String annotators = PropertyFileReader.GetPropertyFromConfigFile(
					fileInputStreamForReadingConfigFile).getProperty(
					"Annotators");
			
			
			String numOfThreads = PropertyFileReader.GetPropertyFromConfigFile(
					fileInputStreamForReadingConfigFile).getProperty(
					"NumberOfThreads");
			
			Properties props = new Properties();
			props.put("annotators", annotators);
			
			StanfordCoreNLP pipeline = new StanfordCoreNLP(props);
			
			BlockingQueue<Map<String,String>> articleQueue = hazelCastInstance.getQueue("articles");
			
			ExecutorService executor = Executors.newFixedThreadPool(Integer.parseInt(numOfThreads));
			
			while(articleQueue.size() > 0)
			{
				Map<String,String> articleDescription = articleQueue.poll();
				Annotation document = new  Annotation(articleDescription.get("description"));
				Future<String> logEntry = executor.submit(new ProcessArticles(articleDescription.get("id"), document,pipeline));
				Thread.sleep(100); 
			}
			executor.shutdown();
			
			if(articleLoaderExecutor != null)
				articleLoaderExecutor.shutdown();
			//hazelCastInstance.shutdown();
			} catch (FileNotFoundException e) {
				/*
				 * HazelCast Config file not found
				 */
				e.printStackTrace();
			}
		
	}

}
